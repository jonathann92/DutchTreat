{"version":3,"sources":["webpack:///./ClientApp/$_lazy_route_resource lazy namespace object","webpack:///./ClientApp/app/Login/login.component.html","webpack:///./ClientApp/app/Login/login.component.ts","webpack:///./ClientApp/app/app.component.css","webpack:///./ClientApp/app/app.component.html","webpack:///./ClientApp/app/app.component.ts","webpack:///./ClientApp/app/app.module.ts","webpack:///./ClientApp/app/checkout/checkout.component.css","webpack:///./ClientApp/app/checkout/checkout.component.html","webpack:///./ClientApp/app/checkout/checkout.component.ts","webpack:///./ClientApp/app/shared/dataService.ts","webpack:///./ClientApp/app/shared/order.ts","webpack:///./ClientApp/app/shop/cart.component.html","webpack:///./ClientApp/app/shop/cart.component.ts","webpack:///./ClientApp/app/shop/productList.component.css","webpack:///./ClientApp/app/shop/productList.component.html","webpack:///./ClientApp/app/shop/productList.component.ts","webpack:///./ClientApp/app/shop/shop.component.html","webpack:///./ClientApp/app/shop/shop.component.ts","webpack:///./ClientApp/environments/environment.ts","webpack:///./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClientApp/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4 col-md-offset-4\\\">\\n    <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\">{{ errorMessage }}</div>\\n    <form (submit)=\\\"onLogin()\\\" #theForm=\\\"ngForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"creds.username\\\" #username=\\\"ngModel\\\" required/>\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"username.touched && username.invalid && username.errors['required']\\\" >Username is required!</div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"creds.password\\\" #password=\\\"ngModel\\\" required/>\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"password.touched && password.invalid && password.errors['required']\\\" >Username is required!</div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Login\\\" [disabled]=\\\"theForm.invalid\\\"/>\\n        <a routerLink=\\\"/\\\" class=\\\"btn btn-default\\\">Cancel</a>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","﻿import { Component } from \"@angular/core\";\nimport {DataService} from \"../shared/dataService\";\nimport {Router} from \"@angular/router\";\nimport {isSuccess} from \"@angular/http/src/http_utils\";\n\n\n@Component({\n    selector: \"login\",\n    templateUrl: \"login.component.html\",\n\n})\nexport class Login {\n    constructor(private data: DataService, private router: Router) {}\n\n    errorMessage: string = \"\";\n    public creds = {\n        username: \"\",\n        password: \"\"\n    };\n\n    onLogin() {\n        this.data.login(this.creds)\n            .subscribe(success => {\n                if (success) {\n                    if (this.data.order.items.length == 0) {\n                        this.router.navigate([\"/\"]);\n                    } else {\n                        this.router.navigate([\"checkout\"]);\n                    }\n                }\n            }, err => this.errorMessage = \"Failed to Login\");\n    }\n}","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Product List';\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from \"@angular/router\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from './app.component';\nimport { ProductList } from \"./shop/productList.component\";\nimport { Cart } from \"./shop/cart.component\";\nimport { Shop } from \"./shop/shop.component\";\nimport { Checkout } from \"./checkout/checkout.component\";\nimport { Login } from \"./Login/login.component\";\nimport { DataService } from \"./shared/dataService\"\n\n\nlet routes = [\n    { path: \"\", component: Shop },\n    { path: \"checkout\", component: Checkout },\n    { path: \"login\", component: Login}\n]\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ProductList,\n        Cart,\n        Shop,\n        Checkout,\n        Login\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        RouterModule.forRoot(routes, {\n            useHash: true,\n            enableTracing: true // for Debugging of the Routes\n        }),\n        FormsModule\n    ],\n    providers: [\n        DataService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".checkout-thumb {\\n  max-width: 100px;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\">{{ errorMessage }}</div>\\n  <h3>Confirm Order</h3>\\n  <table class=\\\"table table-bordered table-hover\\\">\\n    <tr *ngFor=\\\"let o of data.order.items\\\">\\n      <td><img src=\\\"/img/{{ o.productArtId }}.jpg\\\" alt=\\\"o.productTitle\\\" class=\\\"img-thumbnail checkout-thumb\\\" /></td>\\n      <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\\n      <td>{{ o.quantity }}</td>\\n      <td>{{ o.unitPrice|currency:'USD':true }}</td>\\n      <td>{{ (o.unitPrice * o.quantity)|currency:'USD':true }}</td>\\n    </tr>\\n  </table>\\n  <div class=\\\"col-md-4 col-md-offset-8 text-right\\\">\\n    <table class=\\\"table table-condensed\\\">\\n      <tr>\\n        <td class=\\\"text-right\\\">Subtotal</td>\\n        <td class=\\\"text-right\\\">{{ data.order.subtotal|currency:'USD':true }}</td>\\n      </tr>\\n      <tr>\\n        <td class=\\\"text-right\\\">Shipping</td>\\n        <td class=\\\"text-right\\\">$ 0.00</td>\\n      </tr>\\n      <tr>\\n        <td class=\\\"text-right\\\">Total:</td>\\n        <td class=\\\"text-right\\\">{{ data.order.subtotal|currency:'USD':true }}</td>\\n      </tr>\\n    </table>\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"onCheckout()\\\">Complete Purchase</button>\\n    <a routerLink=\\\"/\\\" class=\\\"btn btn-info\\\">Cancel</a>\\n  </div>\\n\\n</div>\"","﻿import { Component } from \"@angular/core\";\nimport { DataService } from '../shared/dataService';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"checkout\",\n  templateUrl: \"checkout.component.html\",\n  styleUrls: ['checkout.component.css']\n})\nexport class Checkout {\n\n  constructor(public data: DataService, public router: Router) {\n  }\n  \n  errorMessage: string = \"\";\n\n    onCheckout() {\n        this.data.checkout().subscribe(success => {\n          if (success) {\n            this.router.navigate([\"/\"])\n          }\n        }, err => this.errorMessage = \"Failed to save order\");\n  }\n}","﻿import {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { map } from 'rxjs/operators';\nimport { Product } from \"./product\";\nimport {Order, OrderItem} from \"./order\";\n\n@Injectable()\nexport class DataService {\n\n    constructor(private http: HttpClient) { }\n\n    private token: string;\n    private tokenExpiration: Date;\n\n    public order: Order = new Order();\n\n    public products: Product[] = [];\n\n    loadProducts(): Observable<boolean>{\n        return this.http.get(\"/api/products\").pipe(\n            map((data: any[]) => {\n                this.products = data;\n                return true;\n            })\n        );\n    }\n\n    public get loginRequired(): boolean {\n        return this.token.length == 0 || this.tokenExpiration > new Date();\n    }\n\n    public login(creds): Observable<boolean> {\n        return this.http\n            .post(\"/account/createtoken\", creds)\n            .pipe(\n                map((data: any) => {\n                    this.token = data.token;\n                    this.tokenExpiration = data.expiration;\n                    return true;\n            })\n        )\n    }\n\n    public checkout() {\n        if (!this.order.orderNumber){\n            this.order.orderNumber =\n                this.order.orderDate.getFullYear().toString() + this.order.orderDate.getTime().toString();\n        }\n        return this.http.post(\"/api/orders\", this.order, {\n            headers: new HttpHeaders().set(\"Authorization\", \"Bearer \" + this.token)\n        }).pipe(\n            map(response => {\n                this.order = new Order();\n                return true;\n            })\n        )\n    }\n\n    public AddToOrder(newProduct: Product) {\n        var item: OrderItem = this.order.items.find(i => i.productId == newProduct.id);\n\n        if (item) {\n            item.quantity++;\n        } else {\n            item = new OrderItem();\n            item.productId = newProduct.id;\n            item.productArtist = newProduct.artist;\n            item.productArtId = newProduct.artId;\n            item.productCategory = newProduct.category;\n            item.productSize = newProduct.size;\n            item.productTitle = newProduct.title;\n            item.unitPrice = newProduct.price;\n            item.quantity = 1;\n            this.order.items.push(item);\n        }   \n    }\n}","import * as _ from \"lodash\";\n\nexport class Order {\n    orderId: number;\n    orderDate: Date = new Date();\n    orderNumber: string;\n    items: Array<OrderItem> = new Array<OrderItem>();\n\n    get subtotal(): number {\n        return _.sum(_.map(this.items, i => i.unitPrice * i.quantity));\n    };\n}\n\nexport class OrderItem {\n    id: number;\n    quantity: number;\n    unitPrice: number;\n    productId: number;\n    productCategory: string;\n    productSize: string;\n    productTitle: string;\n    productArtist: string;\n    productArtId: string;\n}","module.exports = \"<h3>Shopping Cart</h3>\\n<div>#/Items: {{ data.order.items.length }}</div>\\n<div>Subtotal: {{ data.order.subtotal }}</div>\\n<table class=\\\"table table-condensed table-hover\\\">\\n    <thead>\\n        <tr>\\n            <td>Product</td>\\n            <td>#</td>\\n            <td>$</td>\\n            <td>Total</td>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let o of data.order.items\\\">\\n            <td>{{ o.productCategory }} - {{ o.productTitle }}</td>\\n            <td>{{ o.quantity }}</td>\\n            <td>{{ o.unitPrice }}</td>\\n            <td>{{ (o.unitPrice * o.quantity) | currency:\\\"USD\\\":true }}</td>\\n        </tr>\\n    </tbody>\\n</table>\\n<button class=\\\"btn btn-success\\\" *ngIf=\\\"data.order.items.length > 0\\\" (click)=\\\"onCheckout()\\\">Checkout</button>\"","﻿import { Component } from \"@angular/core\";\nimport {DataService} from \"../shared/dataService\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n    selector: \"the-cart\",\n    templateUrl: \"cart.component.html\",\n    styleUrls: []\n})\nexport class Cart {\n    constructor(private data: DataService, private router: Router) { }\n\n    onCheckout() {\n        if (this.data.loginRequired) {\n            this.router.navigate([\"login\"])\n        } else {\n            // go to checkout\n            this.router.navigate([\"checkout\"])\n        }\n    }\n}","module.exports = \".product-info img {\\n    max-width: 100px;\\n    float: left;\\n    margin: 0 2px;\\n    border: solid 1px black;\\n}\\n\\n.product-info .product-name {\\n    font-size: large;\\n    font-weight: bold;\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"product-info col-md-4 well well-sm\\\" *ngFor=\\\"let p of products\\\">\\n        <img src=\\\"/img/{{p.artId}}.jpg\\\" class=\\\"img-responsive\\\" [alt]=\\\"p.title\\\"/>\\n        <div class=\\\"product-name\\\">{{ p.category }} - {{ p.size }}</div>\\n        <div><strong>Price:</strong> {{ p.price|currency:\\\"USD\\\":true }}</div>\\n        <div><strong>Artist</strong>: {{ p.artist }}</div>\\n        <div><strong>Title</strong>: {{ p.title }}</div>\\n        <div><strong>Description</strong>: {{ p.artDescription }}</div>\\n        <button id=\\\"buyButton\\\" class=\\\"btn btn-success btn-sm pull-right\\\" (click)=\\\"addProduct(p)\\\">Buy</button>\\n    </div>\\n</div>\"","﻿import { Component, OnInit } from \"@angular/core\";\nimport { DataService } from \"../shared/dataService\";\nimport { Product } from \"../shared/product\";\n\n@Component({\n    selector: \"product-list\",\n    templateUrl: \"productList.component.html\",\n    styleUrls: [ \"productList.component.css\" ]\n})\nexport class ProductList implements OnInit {\n    constructor(private data: DataService) {\n        this.products = data.products;\n    }\n\n    public products: Product[] = [];\n\n    ngOnInit(): void {\n        this.data.loadProducts()\n            .subscribe(success => {\n                if (success) {\n                    this.products = this.data.products;\n                }\n            })\n    }\n\n    addProduct(product: Product) {\n        this.data.AddToOrder(product)\n    }\n}","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-9\\\">\\n        <h3>{{title}}</h3>\\n        <product-list></product-list>\\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n        <h3>Cart</h3>\\n        <the-cart></the-cart>\\n    </div>\\n</div>\"","﻿import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"the-shop\",\n    templateUrl: \"shop.component.html\"\n})\nexport class Shop {\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}