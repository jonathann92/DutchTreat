{"version":3,"sources":["webpack:///./ClientApp/$_lazy_route_resource lazy namespace object","webpack:///./ClientApp/app/app.component.css","webpack:///./ClientApp/app/app.component.html","webpack:///./ClientApp/app/app.component.ts","webpack:///./ClientApp/app/app.module.ts","webpack:///./ClientApp/app/shared/dataService.ts","webpack:///./ClientApp/app/shared/order.ts","webpack:///./ClientApp/app/shop/cart.component.html","webpack:///./ClientApp/app/shop/cart.component.ts","webpack:///./ClientApp/app/shop/productList.component.css","webpack:///./ClientApp/app/shop/productList.component.html","webpack:///./ClientApp/app/shop/productList.component.ts","webpack:///./ClientApp/environments/environment.ts","webpack:///./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClientApp/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-9\\\">\\n        <h3>{{title}}</h3>\\n        <product-list></product-list>\\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n        <h3>Cart</h3>\\n        <the-cart></the-cart>\\n    </div>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Product List';\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ProductList } from \"./shop/productList.component\";\nimport { Cart } from \"./shop/cart.component\";\nimport { DataService } from \"./shared/dataService\"\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ProductList,\n        Cart\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule\n    ],\n    providers: [\n        DataService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","﻿import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { map } from 'rxjs/operators';\nimport { Product } from \"./product\";\nimport {Order, OrderItem} from \"./order\";\n\n@Injectable()\nexport class DataService {\n\n    constructor(private http: HttpClient) { }\n\n    public order: Order = new Order();\n\n    public products: Product[] = [];\n\n    loadProducts(): Observable<boolean>{\n        return this.http.get(\"/api/products\").pipe(\n            map((data: any[]) => {\n                this.products = data;\n                return true;\n            })\n        );\n    }\n\n    public AddToOrder(newProduct: Product) {\n        var item: OrderItem = this.order.items.find(i => i.productId == newProduct.id);\n\n        if (item) {\n            item.quantity++;\n        } else {\n            item = new OrderItem();\n            item.productId = newProduct.id;\n            item.productArtist = newProduct.artist;\n            item.productArtId = newProduct.artId;\n            item.productCategory = newProduct.category;\n            item.productSize = newProduct.size;\n            item.productTitle = newProduct.title;\n            item.unitPrice = newProduct.price;\n            item.quantity = 1;\n        }\n\n        this.order.items.push();\n    }\n}","export class Order {\n    orderId: number;\n    orderDate: Date = new Date();\n    orderNumber: string;\n    items: Array<OrderItem> = new Array<OrderItem>();\n}\n\nexport class OrderItem {\n    id: number;\n    quantity: number;\n    unitPrice: number;\n    productId: number;\n    productCategory: string;\n    productSize: string;\n    productTitle: string;\n    productArtist: string;\n    productArtId: string;\n}","module.exports = \"<h3>Shopping Cart</h3>\\n<div>Count: {{ data.order.items.length }}</div>\\n<table class=\\\"table table-condensed table-hover\\\">\\n    <thead>\\n        <tr>\\n            <td>Product</td>\\n            <td>#</td>\\n            <td>$</td>\\n            <td>Total</td>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let o of data.order.items\\\">\\n            <td>{{ o.productCategory }} - {{ o.productTitle }}</td>\\n            <td>{{ o.quantity }}</td>\\n            <td>{{ o.unitPrice }}</td>\\n            <td>{{ (o.unitPrice * o.quantity) | currency:\\\"USD\\\":true }}</td>\\n        </tr>\\n    </tbody>\\n</table>\"","﻿import { Component } from \"@angular/core\";\nimport {DataService} from \"../shared/dataService\";\n\n\n@Component({\n    selector: \"the-cart\",\n    templateUrl: \"cart.component.html\",\n    styleUrls: []\n})\nexport class Cart {\n    constructor(private data: DataService) { }\n}","module.exports = \".product-info img {\\n    max-width: 100px;\\n    float: left;\\n    margin: 0 2px;\\n    border: solid 1px black;\\n}\\n\\n.product-info .product-name {\\n    font-size: large;\\n    font-weight: bold;\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"product-info col-md-4 well well-sm\\\" *ngFor=\\\"let p of products\\\">\\n        <img src=\\\"/img/{{p.artId}}.jpg\\\" class=\\\"img-responsive\\\" [alt]=\\\"p.title\\\"/>\\n        <div class=\\\"product-name\\\">{{ p.category }} - {{ p.size }}</div>\\n        <div><strong>Price:</strong> {{ p.price|currency:\\\"USD\\\":true }}</div>\\n        <div><strong>Artist</strong>: {{ p.artist }}</div>\\n        <div><strong>Title</strong>: {{ p.title }}</div>\\n        <div><strong>Description</strong>: {{ p.artDescription }}</div>\\n        <button id=\\\"buyButton\\\" class=\\\"btn btn-success btn-sm pull-right\\\" (click)=\\\"addProduct(p)\\\">Buy</button>\\n    </div>\\n</div>\"","﻿import { Component, OnInit } from \"@angular/core\";\nimport { DataService } from \"../shared/dataService\";\nimport { Product } from \"../shared/product\";\n\n@Component({\n    selector: \"product-list\",\n    templateUrl: \"productList.component.html\",\n    styleUrls: [ \"productList.component.css\" ]\n})\nexport class ProductList implements OnInit {\n    constructor(private data: DataService) {\n        this.products = data.products;\n    }\n\n    public products: Product[] = [];\n\n    ngOnInit(): void {\n        this.data.loadProducts()\n            .subscribe(success => {\n                if (success) {\n                    this.products = this.data.products;\n                }\n            })\n    }\n\n    addProduct(product: Product) {\n        this.data.AddToOrder(product)\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}